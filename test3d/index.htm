<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>My first three.js app</title>
		<style>
			body { margin: 0; }
			canvas { display: block; }
		</style>
	</head>
	<body>
		<script src="three.js"></script>
		<script src="Vox.js"></script>
		
		<script>
			var scene = new THREE.Scene();
			var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

			var renderer = new THREE.WebGLRenderer();
			renderer.setSize( window.innerWidth, window.innerHeight );
			renderer.shadowMapEnabled = true;
			
			//var axes = new THREE.AxisHelper( 20 );
			//scene.add(axes);
			var planeGeometry = new THREE.PlaneGeometry(100,100);
			var planeMaterial = new THREE.MeshLambertMaterial(
				{color: 0xffffff});
			var plane = new THREE.Mesh(planeGeometry,planeMaterial);
			plane.receiveShadow = true;
			plane.rotation.x = -0.5*Math.PI;
			plane.position.x = 15;
			plane.position.y = 0;
			plane.position.z = 0;
			scene.add(plane);	
			
			
			var geometry = new THREE.BoxGeometry( 10, 10, 10 );
			var material = new THREE.MeshLambertMaterial( { color: 0x00ff00 } );
			var cube = new THREE.Mesh( geometry, material );
			cube.castShadow = true
			scene.add( cube );
			
			var spotLight = new THREE.SpotLight( 0xffffff );
			spotLight.position.set( 0, 100, -10 );
			spotLight.castShadow = true;
			scene.add( spotLight );
			
			var parser = new vox.Parser();
			parser.parse("circle.vox").then(function(voxelData) {
				voxelData.voxels; // voxel position and color data
				voxelData.size; // model size
				voxelData.palette; // palette data
				var param = { voxelSize: 5 };
				var builder = new vox.MeshBuilder(voxelData, param);
				var mesh = builder.createMesh();
				scene.add(mesh);
			});
			
			camera.position.x = -30;
			camera.position.y = 40;
			camera.position.z = 30;
			camera.lookAt(scene.position);
	
			renderer.render(scene, camera);
			
			document.body.appendChild( renderer.domElement );
			let step = 0;
			function animate() {
				requestAnimationFrame( animate );
				
				step+=0.04;
				cube.position.x = 20+( 10*(Math.cos(step)));
				cube.position.y = 2 +( 10*Math.abs(Math.sin(step))); 
				
				//cube.rotation.x += 0.01;
				//cube.rotation.y += 0.01;
				//
				renderer.render( scene, camera );
			}
			animate();
		</script>
	</body>
</html>